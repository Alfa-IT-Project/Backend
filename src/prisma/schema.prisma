generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
enum Role {
    general_manager
    customer
}

model User {
    id        Int     @id @default(autoincrement())
    username  String  @unique
    password  String
    name      String  @default("Unknown")
    email     String  @unique
    phone     String?
    address   String?
    role      Role

    customer  Customer?
}

model Customer {
    id          Int      @id @map("user_id")
    notes       String?
    
    purchases   Purchase[]

    user        User     @relation(fields: [id], references: [id], onDelete: Cascade)
    promotions  Promotion[]
}

model Purchase {
    purchase_id  Int       @id @default(autoincrement())
    user_id      Int       // FK referencing User (Customer ID)
    total_amount Decimal   @db.Decimal(10,2)
    shipping_fee Decimal   @db.Decimal(10,2)
    grand_total  Decimal   @db.Decimal(10,2)
    order_date   DateTime

    items        PurchaseItem[]  // Many-to-many relation with Item
    customer     Customer  @relation(fields: [user_id], references: [id], onDelete: Cascade)

}

model Item {
    item_id          Int      @id @default(autoincrement())
    name             String
    price           Decimal  @db.Decimal(10,2)
    stock           Int
    image_url       String
    category        String
    warranty_details String?

    warranty        Warranty?
    purchases      PurchaseItem[]  // Many-to-many relation with Purchase
}

model PurchaseItem {  // Junction table for Purchase and Item
    id          Int     @id @default(autoincrement())
    purchase_id Int
    item_id     Int
    quantity    Int

    purchase    Purchase @relation(fields: [purchase_id], references: [purchase_id], onDelete: Cascade)
    item        Item @relation(fields: [item_id], references: [item_id], onDelete: Cascade)

    @@unique([purchase_id, item_id]) // Ensures no duplicate entries
}

model Warranty {
    warranty_id  Int      @id @default(autoincrement())
    item_id      Int      @unique
    expiry_date  DateTime

    item         Item @relation(fields: [item_id], references: [item_id], onDelete: Cascade)
}

model Promotion {
    promotion_id Int      @id @default(autoincrement())
    customer_id  Int      // New FK referencing Customer
    promo_code   String   @unique
    discount     Decimal  @db.Decimal(10,2)
    expiry_date  DateTime

    customer     Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())
}
